version: '3.4'

services:
  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: src/Apps/WebApi/Dockerfile
    ports:
      - "5005:5005"
      - "5006:5006"
    environment:
      - "UseInMemoryDatabase=false"
      - "ConnectionStrings__DefaultConnection=Server=sql-server-db;Database=CleanArchitectureDb;User=sa;Password=Matech123;MultipleActiveResultSets=true"
      - "IdentityServer__Key__Type=Development"
      - "ASPNETCORE_URLS=https://+:5006;http://+:5005"
      - "ASPNETCORE_Kestrel__Certificates__Default__Password=Matech123"
      - "ASPNETCORE_Kestrel__Certificates__Default__Path=/https/cleanarchitecture.pfx"
    volumes:
      - ~/.aspnet/https:/https:ro
    restart: on-failure
    networks:
      - micro-services
    depends_on:
      - sql-server-db
   
  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Matech123"
      ACCEPT_EULA: "Y"
    ports:
      - "21433:1433"
    restart: unless-stopped
    networks:
      - micro-services

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: unless-stopped
    networks:
      - micro-services

  kib01:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    restart: unless-stopped
    networks:
      - micro-services

volumes:
  data01:
    driver: local

networks:
  micro-services:
    driver: bridge
